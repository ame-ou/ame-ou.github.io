[ { "title": "原型链", "url": "/posts/prototype-chain/", "categories": "Tech", "tags": "frontend", "date": "2021-09-08 08:00:00 +0800", "snippet": "原型继承JavaScript 对象有一个指向一个原型对象的链。当试图访问一个对象的属性时，它不仅在该对象上搜寻，还会搜寻该对象的原型，以及该对象原型的原型，依次层层向上搜索，直到找到一个名字匹配的属性或到达原型链的末尾遵循 ECMAScript 标准，[[Prototype]] 符号用于指向对象原型。从 ECMAScript 6 开始，[[Prototype]] 可以通过 Object.getPrototypeOf() 和 Object.setPrototypeOf() 访问器来访问。这个等同于 JavaScript 的非标准但许多浏览器实现的属性 __proto__属性 每个构造函数..." }, { "title": "事件循环", "url": "/posts/event-loop/", "categories": "Tech", "tags": "frontend", "date": "2021-07-23 08:00:00 +0800", "snippet": "任务队列在事件循环中，每进行一次循环操作称为 tick task 分为两大类, 分别是 Macro Task （宏任务）和 Micro Task（微任务）, 并且每个宏任务结束后, 都要清空所有的微任务 在此次 tick 中选择最先进入队列的任务( oldest task )，如果有则执行(一次)，执行过程中如果遇到微任务，就将它添加到微任务的任务队列中 检查是否存在 Microtasks ，如果存在则不停地执行，直至清空 Microtask Queue GUI 线程接管渲染 主线程重复执行上述步骤宏任务主要包含：script( 整体代码)、setTimeout、setInter..." }, { "title": "前端基础", "url": "/posts/frontend-basis/", "categories": "Tech", "tags": "frontend", "date": "2021-05-06 09:30:00 +0800", "snippet": "script 标签直接写在 html 中 script 标签中的 js 代码会阻塞整个页面，包括 html 结构中位于其上面的内容&amp;lt;script src=&quot;...&quot;&amp;gt;&amp;lt;/script&amp;gt; 不会阻塞他之前内容的渲染，但等他下载执行完后他后面的内容才会渲染异步创建 script 不会阻塞页面渲染script 标签 onload 在 js 文件加载并执行完毕后调用。webpack 将多个符合 CommonJS 规范的模块打包成一个 js 文件，供浏览器执行。异步加载可通过动态创建 script 标签实现Timenew D..." }, { "title": "一些概念", "url": "/posts/concepts/", "categories": "Tech", "tags": "frontend", "date": "2021-04-21 12:30:00 +0800", "snippet": "阻塞/非阻塞 同步/异步阻塞：线程在执行操作时不能执行其他操作 非阻塞：线程在执行操作时可执行其他操作 同步：调用等待返回结果，不可执行其他操作 异步：调用者直接返回，可执行其他操作面向对象/函数式 面向对象编程(OO)通过封装变化使得代码更易理解 函数式编程(FP)通过最小化变化使得代码更易理解纯函数 仅取决于提供的输入，而不依赖于任何在函数求值期间或调用间隔时可能变化的隐藏状态和外部状态。 不会造成超出其作用域的变化，例如修改全局对象或引用传递的参数。Tree-ShakingTree-Shaking 只对 import 语句导入产生作用，对于 CommonJS 的 requir..." }, { "title": "代码风格", "url": "/posts/code-style/", "categories": "Tech", "tags": "frontend", "date": "2021-04-18 22:00:00 +0800", "snippet": "JavaScript 语句后应该加分号么真正会导致上下行解析出问题的 token 有 5 个：括号、方括号、正则开头的斜杠、加号、减号(+ - / ( [)，实际代码几乎没有正则，加号，减号作为行首的情况，所以总结下来：一行开头是括号或者方括号的时候在行首加上分号。script 标签能否放到 body 之后Google 并没有把 &amp;lt;script&amp;gt; 插入在 &amp;lt;/body&amp;gt; 之后，而只是没有写 &amp;lt;/body&amp;gt; 和 &amp;lt;/html&amp;gt; 闭合标签。这样做是符合标准的，不仅是 HTML5 标..." }, { "title": "箭头函数", "url": "/posts/arrow-function/", "categories": "Tech", "tags": "frontend", "date": "2021-04-17 19:30:00 +0800", "snippet": "1. 箭头函数没有 this 绑定如果箭头函数被非箭头函数包含，则 this 绑定的是最近一层非箭头函数的 this；否则，this 的值会被设置为全局对象let person = { name: &#39;foo&#39;, age: 18, say: () =&amp;gt; { console.log(this) // window 对象 console.log(this.name) // undefined console.log(this.age) // undefined }}person.s..." }, { "title": "npm 升级依赖", "url": "/posts/npm-update/", "categories": "Tech", "tags": "frontend", "date": "2021-04-16 20:30:00 +0800", "snippet": "npm 更新命令npm up / npm update / npm upgrade如果 package.json 文件里依赖库版本是类似 ^1.2.3 这种格式，由于该版本代表 [1.2.3, 2.0.0) 的版本区间，在 npm 运行 npm up xx 的时候往往并不会更新该文件，而只是更新 package-lock.json 文件中的依赖版本如果想将 package.json 中的库也更新到最新的版本 可以在 npm up xx 运行之后再次运行 npm install xx 或者直接运行 npm up xx@^ PS: 对于项目并不直接依赖的第三方库，只..." }, { "title": "浏览器回流(reflow)重绘(repaint)", "url": "/posts/reflow-and-repaint/", "categories": "Tech", "tags": "frontend", "date": "2021-04-15 21:00:00 +0800", "snippet": "网页生成过程 HTML 被 HTML 解析器解析成 DOM 树，CSS 被 CSS 解析器解析成 CSSOM 树 结合 DOM 树和 CSSOM 树，生成渲染树(Render Tree) 回流(Layout)：根据生成的渲染树，进行回流(Layout)，得到节点的几何信息(位置，大小) 重绘(Painting)：根据渲染树以及回流得到的几何信息，得到节点的绝对像素 Display：将像素发送给 GPU，展示在页面上。（这一步还有很多内容，比如在 GPU 将多个合成层合并为同一个层，并展示在页面中。而 CSS3 硬件加速的原理则是新建合成层)回流(reflow)概念当 DOM 的..." }, { "title": "HTTP 缓存", "url": "/posts/http-cache/", "categories": "Tech, Net", "tags": "net", "date": "2021-04-12 18:30:00 +0800", "snippet": "浏览器的缓存机制分为两块，也就是规范中的 4.2 Freshness 和 4.3 ValidationFreshnessCache Control 与 Expires 是一组，他们是用来进行 Freshness 验证，也就是提供客户端检测文件是否足够新鲜，可以无需向服务端发起 Validation 请求就能保证并未过期可以直接使用。所有的 from cache 的请求实际上都是由于浏览器认为本地的缓存资源足够新鲜，所以无需额外请求而直接使用。历史问题为何有两个参数而不是一个参数是由于历史原因，在 HTTP 1.0 中定义的是 Expires，Expires 的值是一个明确的过期时间，而后..." } ]
